Gemeenschappelijke submappen: rtw88/alt_rtl8821ce en rtw88-b/alt_rtl8821ce
diff -u rtw88/bf.c rtw88-b/bf.c
--- rtw88/bf.c	2024-08-06 10:48:39.806044892 +0200
+++ rtw88-b/bf.c	2024-08-06 10:49:52.707677365 +0200
@@ -57,7 +57,7 @@
 	}
 
 	ic_vht_cap = &hw->wiphy->bands[NL80211_BAND_5GHZ]->vht_cap;
-#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 19, 0) && !defined(OPENWRT)
 	vht_cap = &sta->vht_cap;
 #else
 	vht_cap = &sta->deflink.vht_cap;
@@ -75,7 +75,7 @@
 		ether_addr_copy(bfee->mac_addr, bssid);
 		bfee->role = RTW_BFEE_MU;
 		bfee->p_aid = (bssid[5] << 1) | (bssid[4] >> 7);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0) || defined(OPENWRT)
 		bfee->aid = vif->cfg.aid;
 #else
 		bfee->aid = bss_conf->aid;
Gemeenschappelijke submappen: rtw88/firmware en rtw88-b/firmware
diff -u rtw88/fw.c rtw88-b/fw.c
--- rtw88/fw.c	2024-08-06 10:48:39.812045109 +0200
+++ rtw88-b/fw.c	2024-08-06 10:49:52.708677401 +0200
@@ -194,7 +194,7 @@
 	si->ra_report.desc_rate = rate;
 	si->ra_report.bit_rate = bit_rate;
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0) || defined(OPENWRT)
 	sta->deflink.agg.max_rc_amsdu_len = get_max_amsdu_len(bit_rate);
 #else
 	sta->max_rc_amsdu_len = get_max_amsdu_len(bit_rate);
@@ -730,7 +730,7 @@
 	rtw_fw_send_h2c_command(rtwdev, h2c_pkt);
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 18, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 18, 0) || defined(OPENWRT1)
 void rtw_fw_send_ra_info(struct rtw_dev *rtwdev, struct rtw_sta_info *si,
 			 bool reset_ra_mask)
 #else
@@ -739,7 +739,7 @@
 {
 	u8 h2c_pkt[H2C_PKT_SIZE] = {0};
 	bool disable_pt = true;
-#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 18, 0)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 18, 0) || defined(OPENWRT1)
 	bool reset_ra_mask = true;
 #endif
 
@@ -1238,7 +1238,7 @@
 
 	switch (rsvd_pkt->type) {
 	case RSVD_BEACON:
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)) || defined(OPENWRT)
 		skb_new = ieee80211_beacon_get_tim(hw, vif, &tim_offset, NULL, 0);
 #else
 		skb_new = ieee80211_beacon_get_tim(hw, vif, &tim_offset, NULL);
@@ -1253,7 +1253,7 @@
 		break;
 	case RSVD_NULL:
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 14, 17)
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0) || defined(OPENWRT)
 		skb_new = ieee80211_nullfunc_get(hw, vif, -1, false);
 #else
 		skb_new = ieee80211_nullfunc_get(hw, vif, false);
@@ -1264,7 +1264,7 @@
 		break;
 	case RSVD_QOS_NULL:
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 14, 17)
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0) || defined(OPENWRT)
 		skb_new = ieee80211_nullfunc_get(hw, vif, -1, true);
 #else
 		skb_new = ieee80211_nullfunc_get(hw, vif, true);
diff -u rtw88/fw.h rtw88-b/fw.h
--- rtw88/fw.h	2024-08-06 10:48:39.813045145 +0200
+++ rtw88-b/fw.h	2024-08-06 10:49:52.708677401 +0200
@@ -836,7 +836,7 @@
 
 void rtw_fw_bt_wifi_control(struct rtw_dev *rtwdev, u8 op_code, u8 *data);
 void rtw_fw_send_rssi_info(struct rtw_dev *rtwdev, struct rtw_sta_info *si);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 18, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 18, 0) || defined(OPENWRT1)
 void rtw_fw_send_ra_info(struct rtw_dev *rtwdev, struct rtw_sta_info *si,
 			 bool reset_ra_mask);
 #else
Gemeenschappelijke submappen: rtw88/.git en rtw88-b/.git
diff -u rtw88/mac80211.c rtw88-b/mac80211.c
--- rtw88/mac80211.c	2024-08-06 10:48:39.813045145 +0200
+++ rtw88-b/mac80211.c	2024-08-06 10:49:52.708677401 +0200
@@ -365,7 +365,7 @@
 static void rtw_ops_bss_info_changed(struct ieee80211_hw *hw,
 				     struct ieee80211_vif *vif,
 				     struct ieee80211_bss_conf *conf,
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)) || defined(OPENWRT)
 				     u64 changed)
 #else
 				     u32 changed)
@@ -383,7 +383,7 @@
 
 	if (changed & BSS_CHANGED_ASSOC) {
 		rtw_vif_assoc_changed(rtwvif, conf);
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)) || defined(OPENWRT)
 		if (vif->cfg.assoc) {
 #else
 		if (conf->assoc) {
@@ -392,7 +392,7 @@
 			rtw_fw_download_rsvd_page(rtwdev);
 			rtw_send_rsvd_page_h2c(rtwdev);
 			rtw_fw_default_port(rtwdev, rtwvif);
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)) || defined(OPENWRT)
 			rtw_coex_media_status_notify(rtwdev, vif->cfg.assoc);
 #else
 			rtw_coex_media_status_notify(rtwdev, conf->assoc);
@@ -461,7 +461,7 @@
 	mutex_unlock(&rtwdev->mutex);
 }
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)) || defined(OPENWRT)
 static int rtw_ops_start_ap(struct ieee80211_hw *hw,
 			    struct ieee80211_vif *vif,
 			    struct ieee80211_bss_conf *link_conf)
@@ -483,7 +483,7 @@
 	return 0;
 }
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)) || defined(OPENWRT)
 static void rtw_ops_stop_ap(struct ieee80211_hw *hw,
 			    struct ieee80211_vif *vif,
 			    struct ieee80211_bss_conf *link_conf)
@@ -505,7 +505,7 @@
 
 static int rtw_ops_conf_tx(struct ieee80211_hw *hw,
 			   struct ieee80211_vif *vif,
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)) || defined(OPENWRT)
 			   unsigned int link_id, u16 ac,
 #else
 			   u16 ac,
@@ -734,7 +734,7 @@
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 18, 0)
 static void rtw_ops_mgd_prepare_tx(struct ieee80211_hw *hw,
 				   struct ieee80211_vif *vif,
-    #if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,14,0))
+    #if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,14,0)) || defined(OPENWRT)
 				   struct ieee80211_prep_tx_info *info)
     #else
 				   u16 duration)
Alleen in rtw88-b: mac80211.c.orig
diff -u rtw88/main.c rtw88-b/main.c
--- rtw88/main.c	2024-08-06 10:48:39.813045145 +0200
+++ rtw88-b/main.c	2024-08-06 10:49:52.709677438 +0200
@@ -193,7 +193,7 @@
 	struct rtw_vif *rtwvif = (struct rtw_vif *)vif->drv_priv;
 
 	if (vif->type == NL80211_IFTYPE_STATION)
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0) || defined(OPENWRT)
 		if (vif->cfg.assoc)
 #else
 		if (vif->bss_conf.assoc)
@@ -369,7 +369,7 @@
 	if (si->mac_id >= RTW_MAX_MAC_ID_NUM)
 		return -ENOSPC;
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0) || defined(OPENWRT)
 	if (vif->type == NL80211_IFTYPE_STATION && vif->cfg.assoc == 0)
 #else
 	if (vif->type == NL80211_IFTYPE_STATION && vif->bss_conf.assoc == 0)
@@ -598,7 +598,7 @@
 void rtw_vif_assoc_changed(struct rtw_vif *rtwvif,
 			   struct ieee80211_bss_conf *conf)
 {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0) || defined(OPENWRT)
 	struct ieee80211_vif *vif = NULL;
 
 	if (conf)
@@ -1026,7 +1026,7 @@
 static u64 get_vht_ra_mask(struct ieee80211_sta *sta)
 {
 	u64 ra_mask = 0;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 	u16 mcs_map = le16_to_cpu(sta->deflink.vht_cap.vht_mcs.rx_mcs_map);
 #else
 	u16 mcs_map = le16_to_cpu(sta->vht_cap.vht_mcs.rx_mcs_map);
@@ -1250,26 +1250,26 @@
 	bool is_vht_enable = false;
 	bool is_support_sgi = false;
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 	if (sta->deflink.vht_cap.vht_supported) {
 #else
 	if (sta->vht_cap.vht_supported) {
 #endif
 		is_vht_enable = true;
 		ra_mask |= get_vht_ra_mask(sta);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 		if (sta->deflink.vht_cap.cap & IEEE80211_VHT_CAP_RXSTBC_MASK)
 #else
 		if (sta->vht_cap.cap & IEEE80211_VHT_CAP_RXSTBC_MASK)
 #endif
 			stbc_en = VHT_STBC_EN;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 		if (sta->deflink.vht_cap.cap & IEEE80211_VHT_CAP_RXLDPC)
 #else
 		if (sta->vht_cap.cap & IEEE80211_VHT_CAP_RXLDPC)
 #endif
 			ldpc_en = VHT_LDPC_EN;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 	} else if (sta->deflink.ht_cap.ht_supported) {
 		ra_mask |= (sta->deflink.ht_cap.mcs.rx_mask[1] << 20) |
 			   (sta->deflink.ht_cap.mcs.rx_mask[0] << 12);
@@ -1292,20 +1292,20 @@
 		ra_mask &= RA_MASK_VHT_RATES_1SS | RA_MASK_HT_RATES_1SS;
 
 	if (hal->current_band_type == RTW_BAND_5G) {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 		ra_mask |= (u64)sta->deflink.supp_rates[NL80211_BAND_5GHZ] << 4;
 #else
 		ra_mask |= (u64)sta->supp_rates[NL80211_BAND_5GHZ] << 4;
 #endif
 		ra_mask_bak = ra_mask;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 		if (sta->deflink.vht_cap.vht_supported) {
 #else
 		if (sta->vht_cap.vht_supported) {
 #endif
 			ra_mask &= RA_MASK_VHT_RATES | RA_MASK_OFDM_IN_VHT;
 			wireless_set = WIRELESS_OFDM | WIRELESS_VHT;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 		} else if (sta->deflink.ht_cap.ht_supported) {
 #else
 		} else if (sta->ht_cap.ht_supported) {
@@ -1317,13 +1317,13 @@
 		}
 		dm_info->rrsr_val_init = RRSR_INIT_5G;
 	} else if (hal->current_band_type == RTW_BAND_2G) {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 		ra_mask |= sta->deflink.supp_rates[NL80211_BAND_2GHZ];
 #else
 		ra_mask |= sta->supp_rates[NL80211_BAND_2GHZ];
 #endif
 		ra_mask_bak = ra_mask;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 		if (sta->deflink.vht_cap.vht_supported) {
 #else
 		if (sta->vht_cap.vht_supported) {
@@ -1332,7 +1332,7 @@
 				   RA_MASK_OFDM_IN_VHT;
 			wireless_set = WIRELESS_CCK | WIRELESS_OFDM |
 				       WIRELESS_HT | WIRELESS_VHT;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 		} else if (sta->deflink.ht_cap.ht_supported) {
 #else
 		} else if (sta->ht_cap.ht_supported) {
@@ -1341,7 +1341,7 @@
 				   RA_MASK_OFDM_IN_HT_2G;
 			wireless_set = WIRELESS_CCK | WIRELESS_OFDM |
 				       WIRELESS_HT;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 		} else if (sta->deflink.supp_rates[0] <= 0xf) {
 #else
 		} else if (sta->supp_rates[0] <= 0xf) {
@@ -1358,14 +1358,14 @@
 		wireless_set = 0;
 	}
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 	switch (sta->deflink.bandwidth) {
 #else
 	switch (sta->bandwidth) {
 #endif
 	case IEEE80211_STA_RX_BW_80:
 		bw_mode = RTW_CHANNEL_WIDTH_80;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 		is_support_sgi = sta->deflink.vht_cap.vht_supported &&
 				 (sta->deflink.vht_cap.cap & IEEE80211_VHT_CAP_SHORT_GI_80);
 #else
@@ -1375,7 +1375,7 @@
 		break;
 	case IEEE80211_STA_RX_BW_40:
 		bw_mode = RTW_CHANNEL_WIDTH_40;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 		is_support_sgi = sta->deflink.ht_cap.ht_supported &&
 				 (sta->deflink.ht_cap.cap & IEEE80211_HT_CAP_SGI_40);
 #else
@@ -1385,7 +1385,7 @@
 		break;
 	default:
 		bw_mode = RTW_CHANNEL_WIDTH_20;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 		is_support_sgi = sta->deflink.ht_cap.ht_supported &&
 				 (sta->deflink.ht_cap.cap & IEEE80211_HT_CAP_SGI_20);
 #else
@@ -1395,14 +1395,14 @@
 		break;
 	}
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 	if (sta->deflink.vht_cap.vht_supported && ra_mask & 0xffc00000) {
 #else
 	if (sta->vht_cap.vht_supported && ra_mask & 0xffc00000) {
 #endif
 		tx_num = 2;
 		rf_type = RF_2T2R;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 	} else if (sta->deflink.ht_cap.ht_supported && ra_mask & 0xfff00000) {
 #else
 	} else if (sta->ht_cap.ht_supported && ra_mask & 0xfff00000) {
@@ -1426,7 +1426,7 @@
 	si->ra_mask = ra_mask;
 	si->rate_id = rate_id;
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 18, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 18, 0) || defined(OPENWRT1)
 	rtw_fw_send_ra_info(rtwdev, si, reset_ra_mask);
 #else
 	rtw_fw_send_ra_info(rtwdev, si);
@@ -1809,7 +1809,7 @@
 {
 	struct rtw_dev *rtwdev = (struct rtw_dev *)data;
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0) || defined(OPENWRT)
 	if (vif->type != NL80211_IFTYPE_STATION || !vif->cfg.assoc)
 #else
 	if (vif->type != NL80211_IFTYPE_STATION || !vif->bss_conf.assoc)
@@ -1817,13 +1817,13 @@
 		return;
 
 	if (rtwdev->hal.txrx_1ss)
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0) || defined(OPENWRT)
 		ieee80211_request_smps(vif, 0, IEEE80211_SMPS_STATIC);
 #else
 		ieee80211_request_smps(vif, IEEE80211_SMPS_STATIC);
 #endif
 	else
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0) || defined(OPENWRT)
 		ieee80211_request_smps(vif, 0, IEEE80211_SMPS_OFF);
 #else
 		ieee80211_request_smps(vif, IEEE80211_SMPS_OFF);
@@ -2555,7 +2555,7 @@
 	if (vif->type != NL80211_IFTYPE_STATION)
 		return;
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0) || defined(OPENWRT)
 	if (vif->cfg.assoc || !is_zero_ether_addr(rtwvif->bssid))
 #else
 	if (vif->bss_conf.assoc || !is_zero_ether_addr(rtwvif->bssid))
diff -u rtw88/main.h rtw88-b/main.h
--- rtw88/main.h	2024-08-06 10:48:39.813045145 +0200
+++ rtw88-b/main.h	2024-08-06 10:49:52.709677438 +0200
@@ -33,6 +33,8 @@
 #define RHEL_RELEASE_VERSION(a, b) a<<8 & b
 #endif
 
+#define OPENWRT
+
 #if LINUX_VERSION_CODE < KERNEL_VERSION(6, 8, 0)
 /**
  * cfg80211_ssid_eq - compare two SSIDs
diff -u rtw88/pci.c rtw88-b/pci.c
--- rtw88/pci.c	2024-08-06 10:48:39.813045145 +0200
+++ rtw88-b/pci.c	2024-08-06 10:50:43.434509105 +0200
@@ -1691,7 +1691,7 @@
 	struct rtw_pci *rtwpci = (struct rtw_pci *)rtwdev->priv;
 
 	init_dummy_netdev(&rtwpci->netdev);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0) || defined(OPENWRT)
 	netif_napi_add(&rtwpci->netdev, &rtwpci->napi, rtw_pci_napi_poll);
 #else
 	netif_napi_add(&rtwpci->netdev, &rtwpci->napi, rtw_pci_napi_poll,
diff -u rtw88/ps.c rtw88-b/ps.c
--- rtw88/ps.c	2024-08-06 10:48:39.814045181 +0200
+++ rtw88-b/ps.c	2024-08-06 10:49:52.709677438 +0200
@@ -334,7 +334,7 @@
 		__rtw_vif_recalc_lps(&data, new_vif);
 	rtw_iterate_vifs(rtwdev, rtw_vif_recalc_lps_iter, &data);
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)) || defined(OPENWRT)
 	if (data.count == 1 && data.found_vif->cfg.ps) {
 		rtwdev->ps_enabled = true;
 	} else {
diff -u rtw88/tx.c rtw88-b/tx.c
--- rtw88/tx.c	2024-08-06 10:48:39.820045398 +0200
+++ rtw88-b/tx.c	2024-08-06 10:49:52.710677474 +0200
@@ -94,7 +94,7 @@
 
 static u8 get_tx_ampdu_factor(struct ieee80211_sta *sta)
 {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 	u8 exp = sta->deflink.ht_cap.ampdu_factor;
 #else
 	u8 exp = sta->ht_cap.ampdu_factor;
@@ -109,7 +109,7 @@
 
 static u8 get_tx_ampdu_density(struct ieee80211_sta *sta)
 {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 	return sta->deflink.ht_cap.ampdu_density;
 #else
 	return sta->ht_cap.ampdu_density;
@@ -121,7 +121,7 @@
 {
 	u8 rate;
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 	if (rtwdev->hal.rf_type == RF_2T2R && sta->deflink.ht_cap.mcs.rx_mask[1] != 0)
 #else
 	if (rtwdev->hal.rf_type == RF_2T2R && sta->ht_cap.mcs.rx_mask[1] != 0)
@@ -140,7 +140,7 @@
 	u8 rate;
 	u16 tx_mcs_map;
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 	tx_mcs_map = le16_to_cpu(sta->deflink.vht_cap.vht_mcs.tx_mcs_map);
 #else
 	tx_mcs_map = le16_to_cpu(sta->vht_cap.vht_mcs.tx_mcs_map);
@@ -386,7 +386,7 @@
 	if (info->control.use_rts || skb->len > hw->wiphy->rts_threshold)
 		pkt_info->rts = true;
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0) || defined(OPENWRT)
 	if (sta->deflink.vht_cap.vht_supported)
 		rate = get_highest_vht_tx_rate(rtwdev, sta);
 	else if (sta->deflink.ht_cap.ht_supported)
