--- a/os_dep/linux/ioctl_linux.c	2024-08-09 12:54:41.293428969 +0800
+++ b/os_dep/linux/ioctl_linux.c	2024-08-09 12:55:56.393401989 +0800
@@ -9720,7 +9720,11 @@ static int rtw_mp_efuse_set(struct net_d
 		rtw_hal_read_chip_info(padapter);
 		/* set mac addr*/
 		rtw_macaddr_cfg(adapter_mac_addr(padapter), get_hal_mac_addr(padapter));
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 15, 0))
 		eth_hw_addr_set(padapter->pnetdev, get_hal_mac_addr(padapter)); /* set mac addr to net_device */
+#else
+		memcpy(padapter->pnetdev->dev_addr, get_hal_mac_addr(padapter), ETH_ALEN); /* set mac addr to net_device */
+#endif
 
 #ifdef CONFIG_P2P
 		rtw_init_wifidirect_addrs(padapter, adapter_mac_addr(padapter), adapter_mac_addr(padapter));
--- a/os_dep/osdep_service.c	2024-08-09 12:20:52.532787889 +0800
+++ b/os_dep/osdep_service.c	2024-08-09 12:22:57.181339160 +0800
@@ -1587,7 +1587,11 @@ int rtw_change_ifname(_adapter *padapter
 
 	rtw_init_netdev_name(pnetdev, ifname);
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 15, 0))
 	eth_hw_addr_set(pnetdev, adapter_mac_addr(padapter));
+#else
+	memcpy(pnetdev->dev_addr, adapter_mac_addr(padapter), ETH_ALEN);
+#endif
 
 	if (rtnl_lock_needed)
 		ret = register_netdev(pnetdev);
--- a/os_dep/linux/os_intfs.c	2024-08-09 12:27:02.151275940 +0800
+++ b/os_dep/linux/os_intfs.c	2024-08-09 12:45:41.401936863 +0800
@@ -1243,7 +1243,11 @@ static int rtw_net_set_mac_address(struc
 	}
 
 	memcpy(adapter_mac_addr(padapter), sa->sa_data, ETH_ALEN); /* set mac addr to adapter */
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 15, 0))
 	eth_hw_addr_set(pnetdev, sa->sa_data);/* set mac addr to net_device */
+#else
+	memcpy(pnetdev->dev_addr, sa->sa_data, ETH_ALEN); /* set mac addr to net_device */
+#endif
 
 #if 0
 	if (rtw_is_hw_init_completed(padapter)) {
@@ -1673,11 +1677,12 @@ int rtw_os_ndev_register(_adapter *adapt
 	u8 rtnl_lock_needed = rtw_rtnl_lock_needed(dvobj);
 
 #ifdef CONFIG_RTW_NAPI
-	netif_napi_add(ndev, &adapter->napi, rtw_recv_napi_poll
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0) && (BUILD_OPENWRT > 2102))
-	, RTL_NAPI_WEIGHT
-#endif
-	);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0) && (!defined(RHEL_RELEASE_CODE))) || (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0) && (defined(RHEL_RELEASE_CODE) && RHEL_RELEASE_CODE <= 2305)) || (BUILD_OPENWRT <= 1907)
+	netif_napi_add(ndev, &adapter->napi, rtw_recv_napi_poll, RTL_NAPI_WEIGHT);
+#else
+    netif_napi_add_weight(ndev, &adapter->napi, rtw_recv_napi_poll, RTL_NAPI_WEIGHT);
+#endif	
+
 #endif /* CONFIG_RTW_NAPI */
 
 #if defined(CONFIG_IOCTL_CFG80211)
@@ -1693,7 +1698,11 @@ int rtw_os_ndev_register(_adapter *adapt
 	/* alloc netdev name */
 	rtw_init_netdev_name(ndev, name);
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 15, 0))
 	eth_hw_addr_set(ndev, adapter_mac_addr(adapter));
+#else
+	memcpy(ndev->dev_addr, adapter_mac_addr(adapter), ETH_ALEN);
+#endif
 
 	/* Tell the network stack we exist */
 
@@ -2650,7 +2659,11 @@ int _netdev_vir_if_open(struct net_devic
 		rtw_mbid_camid_alloc(padapter, adapter_mac_addr(padapter));
 #endif
 		rtw_init_wifidirect_addrs(padapter, adapter_mac_addr(padapter), adapter_mac_addr(padapter));
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 15, 0))
 		eth_hw_addr_set(pnetdev, adapter_mac_addr(padapter));
+#else
+		memcpy(pnetdev->dev_addr, adapter_mac_addr(padapter), ETH_ALEN);
+#endif
 	}
 #endif /*CONFIG_PLATFORM_INTEL_BYT*/
 
@@ -3399,7 +3412,11 @@ int _netdev_open(struct net_device *pnet
 		rtw_mbid_camid_alloc(padapter, adapter_mac_addr(padapter));
 #endif
 		rtw_init_wifidirect_addrs(padapter, adapter_mac_addr(padapter), adapter_mac_addr(padapter));
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 15, 0))
 		eth_hw_addr_set(pnetdev, adapter_mac_addr(padapter));
+#else
+		memcpy(pnetdev->dev_addr, adapter_mac_addr(padapter), ETH_ALEN);
+#endif
 #endif /* CONFIG_PLATFORM_INTEL_BYT */
 
 		rtw_clr_surprise_removed(padapter);
